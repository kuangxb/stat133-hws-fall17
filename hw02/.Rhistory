github <- "https://github.com/ucb-stat133/stat133-fall-2017/raw/master/"
file <- "data/nba2017-player-statistics.csv"
csv <- paste0(github, file)
download.file(url = csv, destfile = 'nba2017-player-statistics.csv')
nrow(csv)
knitr::opts_chunk$set(echo = TRUE)
read.csv(csv)
Data1 = data.frame(read.csv(csv))
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
?rm
rm(Data1)
Data1 <- read.csv(csv)
str(Data1)
rm(Data1)
Data1 <- data.frame(read.csv(csv))
str(Data1)
Data1 <- data.frame(read.csv(csv))
str(Data1)
Data1$Player = as.character(Data1$Player)
Data1$Team = as.character(Data1$Team)
Data1$Experience = as.character(Data1$Experience)
Data1$Position = as.factor(Data1$Position)
Data1 <- data.frame(read.csv(csv))
Data1$Player = as.character(Data1$Player)
Data1$Team = as.character(Data1$Team)
Data1$Experience = as.character(Data1$Experience)
Data1$Position = as.factor(Data1$Position)
str(Data1)
Data1 <- data.frame(read.csv(csv),header = TRUE, colClasses=c("Player"="character", "Team" = "character", "Experience" = "character", "Position" = "Factor", "Salary" = 'double)))
Data1 <- data.frame(read.csv(csv), header = TRUE, colClasses=c("Player"="character", "Team" = "character", "Experience" = "character", "Position" = "Factor", "Salary" = 'double'))
smallData <- read.csv(csv,
header = TRUE,
colClasses=c("Player"="character"))
rm(smallData)
Data1 <- data.frame(read.csv(csv, header = TRUE, colClasses=c("Player"="character", "Team" = "character", "Experience" = "character", "Position" = "Factor", "Salary" = 'double')))
Data1 <- data.frame(read.csv(csv, header = TRUE, colClasses=c("Player"="character", "Team" = "character", "Experience" = "character", "Position" = "factor", "Salary" = 'double')))
rm(Data1)
Data1 <- data.frame(read.csv(csv, header = TRUE, colClasses=c("Player"="character", "Team" = "character", "Experience" = "character", "Position" = "factor", "Salary" = 'double')))
str(Data1)
knitr::opts_chunk$set(echo = TRUE)
DataBase <- data.frame(read.csv(csv, header = TRUE, colClasses=c("Player"="character", "Team" = "character", "Experience" = "character", "Position" = "factor", "Salary" = 'double')))
str(Data1)
rm(Data1)
class[DataBase$Salary]
class(DataBase$Salary)
is.double(DataBase$Salary)
DataReadr <- read_csv(csv, col_types = cols(.default = "int", Team = "character", Position = "factor", Experience = "character", Salary = "double"))
library(readr)
install.packages("readr")
library(readr)
DataReadr <- read_csv(csv, col_types = cols(.default = "int", Team = "character", Position = "factor", Experience = "character", Salary = "double"))
library(readr)
DataReadr <- read_csv(csv, col_types = cols(.default = "int", Team = "ccc", Position = "factor", Experience = "ccc", Salary = "double"))
library(readr)
DataReadr <- read_csv(csv, col_types = cols(.default = col_integer(), Team = col_character(), Position = col_factor(), Experience = col_character(), Salary = col_double()))
library(readr)
read_csv(csv)
library(readr)
str(read_csv(csv))
library(readr)
DataReadr <- read_csv(csv, col_types = cols(.default = col_integer(), Team = col_character(), Position = col_factor(), Experience = col_character(), Salary = col_double()))
library(readr)
DataReadr <- read_csv(csv, col_types = cols(.default = col_integer(), Team = col_character(), Position = col_factor(c('C','PF','PG','SF','SG')), Experience = col_character(), Salary = col_double()))
str(DataReadr)
library(readr)
DataReadr <- read_csv(csv, col_types = cols(.default = col_integer(),Player = col_character(), Team = col_character(), Position = col_factor(c('C','PF','PG','SF','SG')), Experience = col_character(), Salary = col_double()))
str(DataReadr)
DataBase$Experience[Experience = "R"] = 0
View(DataBase)
View(DataBase)
library(readr)
DataReadr <- read_csv(csv, col_types = cols(.default = col_integer(),Player = col_character(), Team = col_character(), Position = col_factor(c('C','PF','PG','SF','SG')), Experience = col_character(), Salary = col_double()))
str(DataReadr)
DataBase$Experience <- replace(as.character(DataBase$Experience), DataBase$Experience == "R", 0)
DataBase$Experience <- replace(as.character(DataBase$Experience), DataBase$Experience == "R", 0)
DataBase$Experience = as.integer(DataBase$Experience)
DataBase <- data.frame(read.csv(csv, header = TRUE, colClasses=c("Player"="character", "Team" = "character", "Experience" = "character", "Position" = "factor", "Salary" = 'double')))
str(DataBase)
DataBase$Missed_FG = DataBase$FGA - DataBase$FGM
DataBase$Missed_FT = DataBase$FTA - DataBase$FTM
DataBase$PTS = DataBase$Points2 + DataBase$Points3 + DataBase$FTM
DataBase$REB = DataBase$OREB + DataBase$DREB
DataBase$MPG = DataBase$MIN/DataBase$GP
DataBase$EFF = (DataBase$PTS + DataBase$REB + DataBase$AST + DataBase$STL + DataBase$BLK - DataBase$Missed_FG - DataBase$Missed_FT - DataBase$TO) / DataBase$GP
DataBase$EFF = (DataBase$PTS + DataBase$REB + DataBase$AST + DataBase$STL + DataBase$BLK - DataBase$Missed_FG - DataBase$Missed_FT - DataBase$TO) / DataBase$GP
sum(EFF)
DataBase$EFF = (DataBase$PTS + DataBase$REB + DataBase$AST + DataBase$STL + DataBase$BLK - DataBase$Missed_FG - DataBase$Missed_FT - DataBase$TO) / DataBase$GP
sum(DataBase$EFF)
DataBase$EFF = (DataBase$PTS + DataBase$REB + DataBase$AST + DataBase$STL + DataBase$BLK - DataBase$Missed_FG - DataBase$Missed_FT - DataBase$TO) / DataBase$GP
summary(DataBase$EFF)
DataBase$Missed_FG = DataBase$FGA - DataBase$FGM
DataBase$Missed_FT = DataBase$FTA - DataBase$FTM
DataBase$PTS = 2 * DataBase$Points2 + 3 * DataBase$Points3 + DataBase$FTM
DataBase$REB = DataBase$OREB + DataBase$DREB
DataBase$MPG = DataBase$MIN/DataBase$GP
DataBase$EFF = (DataBase$PTS + DataBase$REB + DataBase$AST + DataBase$STL + DataBase$BLK - DataBase$Missed_FG - DataBase$Missed_FT - DataBase$TO) / DataBase$GP
summary(DataBase$EFF)
?histogram
?hist
hist(DataBase$EFF, xlab = "EFF", main = "Histogram of Efficient(EFF)" )
hist(DataBase$EFF, xlab = "EFF", main = "Histogram of Efficient(EFF)", col = "gray" )
DataBase$Player[DataBase$EFF < 0]
?head
head(DataBase$EFF, n = 5)
hist(DataBase$EFF, xlab = "EFF", main = "Histogram of Efficient(EFF)", col = "gray")
DataBase$Player[DataBase$EFF < 0]
Top = head(DataBase$EFF, n = 5)
hist(DataBase$EFF, xlab = "EFF", main = "Histogram of Efficient(EFF)", col = "gray")
DataBase$Player[DataBase$EFF < 0]
Top = head(DataBase$EFF, n = 5)
Top$Player
hist(DataBase$EFF, xlab = "EFF", main = "Histogram of Efficient(EFF)", col = "gray")
DataBase$Player[DataBase$EFF < 0]
Top = head(DataBase$EFF, n = 5, decreasing = TRUE)
Top = head(DataBase$EFF, n = 5, decreasing = TRUE)
rm(Top)
hist(DataBase$EFF, xlab = "EFF", main = "Histogram of Efficient(EFF)", col = "gray")
DataBase$Player[DataBase$EFF < 0]
Top = head(DataBase$EFF, n = 5, decreasing = TRUE)
hist(DataBase$EFF, xlab = "EFF", main = "Histogram of Efficient(EFF)", col = "gray")
DataBase$Player[DataBase$EFF < 0]
Top = head(DataBase$EFF, n = 5)
sort(Top, decreasing = TRUE)
Top[1]
Top[2]
hist(DataBase$EFF, xlab = "EFF", main = "Histogram of Efficient(EFF)", col = "gray")
DataBase$Player[DataBase$EFF < 0]
head(DataBase[order(DataBase$EFF), ], 5)
hist(DataBase$EFF, xlab = "EFF", main = "Histogram of Efficient(EFF)", col = "gray")
DataBase$Player[DataBase$EFF < 0]
Top = head(DataBase[order(DataBase$EFF), ], 5)
View(Top)
hist(DataBase$EFF, xlab = "EFF", main = "Histogram of Efficient(EFF)", col = "gray")
DataBase$Player[DataBase$EFF < 0]
Top = head(DataBase[order(DataBase$EFF), decreasing = FALSE ], 5)
View(Top)
rm(Top)
hist(DataBase$EFF, xlab = "EFF", main = "Histogram of Efficient(EFF)", col = "gray")
DataBase$Player[DataBase$EFF < 0]
Top = tail(DataBase[order(DataBase$EFF) ], 5)
hist(DataBase$EFF, xlab = "EFF", main = "Histogram of Efficient(EFF)", col = "gray")
DataBase$Player[DataBase$EFF < 0]
Top = head(DataBase[order(DataBase$EFF), decreasing = TRUE ], 5)
hist(DataBase$EFF, xlab = "EFF", main = "Histogram of Efficient(EFF)", col = "gray")
DataBase$Player[DataBase$EFF < 0]
Top = head(DataBase[order(DataBase$EFF)], 5)
?order
head(DataBase[order(DataBase$EFF)], 5)
hist(DataBase$EFF, xlab = "EFF", main = "Histogram of Efficient(EFF)", col = "gray")
DataBase$Player[DataBase$EFF < 0]
Top = head(DataBase$Player[order(DataBase$EFF)], 5)
hist(DataBase$EFF, xlab = "EFF", main = "Histogram of Efficient(EFF)", col = "gray")
DataBase$Player[DataBase$EFF < 0]
Top = tail(DataBase$EFF[order(DataBase$EFF)], 5)
?select
hist(DataBase$EFF, xlab = "EFF", main = "Histogram of Efficient(EFF)", col = "gray")
DataBase$Player[DataBase$EFF < 0]
Top = tail(DataBase$EFF[order(DataBase$EFF)], 10)
top_10 = select(Top, Player, Team, Salary)
hist(DataBase$EFF, xlab = "EFF", main = "Histogram of Efficient(EFF)", col = "gray")
#Top 10 EFF
Top = tail(DataBase$EFF[order(DataBase$EFF)], 10)
top_10 = data.frame( c(DataBase$Player[DataBase$EFF = Top], DataBase$Team[DataBase$EFF = Top], DataBase$Salary[DataBase$EFF = Top], Top))
#Top 10 EFF
Top = tail(DataBase$EFF[order(DataBase$EFF)], 10)
top_10 <- data.frame( c(DataBase$Player[DataBase$EFF = Top], DataBase$Team[DataBase$EFF = Top], DataBase$Salary[DataBase$EFF = Top], Top))
#Top 10 EFF
Top = tail(DataBase$EFF[order(DataBase$EFF)], 10)
top_10 <- data.frame( c(DataBase$Player[DataBase$EFF == Top], DataBase$Team[DataBase$EFF == Top], DataBase$Salary[DataBase$EFF == Top], Top))
View(top_10)
corr_coff <- c(cor(dat$EFF, dat$PTS), cor(dat$EFF, dat$REB), cor(dat$EFF, dat$AST), cor(dat$EFF, dat$STL), cor(dat$EFF, dat$BLK), cor(dat$EFF, -dat$Missed_FG), cor(dat$EFF, -dat$Missed_FT), cor(dat$EFF, -dat$TO), cor(dat$EFF, dat$GP)
corr_coff <- c(cor(dat$EFF, dat$PTS), cor(dat$EFF, dat$REB), cor(dat$EFF, dat$AST), cor(dat$EFF, dat$STL), cor(dat$EFF, dat$BLK), cor(dat$EFF, -dat$Missed_FG), cor(dat$EFF, -dat$Missed_FT), cor(dat$EFF, -dat$TO), cor(dat$EFF, dat$GP))
corr_coff <- c(cor(DataBase$EFF, DataBase$PTS), cor(DataBase$EFF, DataBase$REB), cor(DataBase$EFF, DataBase$AST), cor(DataBase$EFF, DataBase$STL), cor(DataBase$EFF, DataBase$BLK), cor(DataBase$EFF, -DataBase$Missed_FG), cor(DataBase$EFF, -DataBase$Missed_FT), cor(DataBase$EFF, -DataBase$TO), cor(DataBase$EFF, DataBase$GP))
corr_coff <- c(cor(DataBase$EFF, DataBase$PTS), cor(DataBase$EFF, DataBase$REB), cor(DataBase$EFF, DataBase$AST), cor(DataBase$EFF, DataBase$STL), cor(DataBase$EFF, DataBase$BLK), cor(DataBase$EFF, -DataBase$Missed_FG), cor(DataBase$EFF, -DataBase$Missed_FT), cor(DataBase$EFF, -DataBase$TO))
corr_coff <- c(cor(DataBase$EFF, DataBase$PTS), cor(DataBase$EFF, DataBase$REB), cor(DataBase$EFF, DataBase$AST), cor(DataBase$EFF, DataBase$STL), cor(DataBase$EFF, DataBase$BLK), cor(DataBase$EFF, -DataBase$Missed_FG), cor(DataBase$EFF, -DataBase$Missed_FT), cor(DataBase$EFF, -DataBase$TO))
barplot(corr_coff)
corr_coff <- c(cor(DataBase$EFF, DataBase$PTS), cor(DataBase$EFF, DataBase$REB), cor(DataBase$EFF, DataBase$AST), cor(DataBase$EFF, DataBase$STL), cor(DataBase$EFF, DataBase$BLK), cor(DataBase$EFF, -DataBase$Missed_FG), cor(DataBase$EFF, -DataBase$Missed_FT), cor(DataBase$EFF, -DataBase$TO))
barplot(corr_coff, main = "Correlations between Player Stats and EFF", names.arg = c("PTS", "REB", "STL", "AST", "BLK", "Missed_FT", "Missed_FG", "TO"))
corr_coff <- c(cor(DataBase$EFF, DataBase$PTS), cor(DataBase$EFF, DataBase$REB), cor(DataBase$EFF, DataBase$AST), cor(DataBase$EFF, DataBase$STL), cor(DataBase$EFF, DataBase$BLK), cor(DataBase$EFF, -DataBase$Missed_FG), cor(DataBase$EFF, -DataBase$Missed_FT), cor(DataBase$EFF, -DataBase$TO))
barplot(corr_coff, main = "Correlations between Player Stats and EFF", names.arg = c("PTS", "REB", "STL", "AST", "BLK", "Missed_FT", "Missed_FG", "TO"))
abline( h = 0)
corr_coff <- c(cor(DataBase$EFF, DataBase$PTS), cor(DataBase$EFF, DataBase$REB), cor(DataBase$EFF, DataBase$AST), cor(DataBase$EFF, DataBase$STL), cor(DataBase$EFF, DataBase$BLK), cor(DataBase$EFF, -DataBase$Missed_FG), cor(DataBase$EFF, -DataBase$Missed_FT), cor(DataBase$EFF, -DataBase$TO))
barplot(corr_coff, main = "Correlations between Player Stats and EFF", names.arg = c("PTS", "REB", "STL", "AST", "BLK", "Missed_FT", "Missed_FG", "TO"), ylim = 1)
corr_coff <- c(cor(DataBase$EFF, DataBase$PTS), cor(DataBase$EFF, DataBase$REB), cor(DataBase$EFF, DataBase$AST), cor(DataBase$EFF, DataBase$STL), cor(DataBase$EFF, DataBase$BLK), cor(DataBase$EFF, -DataBase$Missed_FG), cor(DataBase$EFF, -DataBase$Missed_FT), cor(DataBase$EFF, -DataBase$TO))
barplot(corr_coff, main = "Correlations between Player Stats and EFF", names.arg = c("PTS", "REB", "STL", "AST", "BLK", "Missed_FT", "Missed_FG", "TO"))
abline( h = 0)
corr_coff <- c(cor(DataBase$EFF, DataBase$PTS), cor(DataBase$EFF, DataBase$REB), cor(DataBase$EFF, DataBase$AST), cor(DataBase$EFF, DataBase$STL), cor(DataBase$EFF, DataBase$BLK), cor(DataBase$EFF, -DataBase$Missed_FG), cor(DataBase$EFF, -DataBase$Missed_FT), cor(DataBase$EFF, -DataBase$TO))
barplot(corr_coff, main = "Correlations between Player Stats and EFF", names.arg = c("PTS", "REB", "STL", "AST", "BLK", "Missed_FT", "Missed_FG", "TO"), ylim=c(-1,1), if(x>0) {col="red"} else {col="blue"})
corr_coff <- c(cor(DataBase$EFF, DataBase$PTS), cor(DataBase$EFF, DataBase$REB), cor(DataBase$EFF, DataBase$AST), cor(DataBase$EFF, DataBase$STL), cor(DataBase$EFF, DataBase$BLK), cor(DataBase$EFF, -DataBase$Missed_FG), cor(DataBase$EFF, -DataBase$Missed_FT), cor(DataBase$EFF, -DataBase$TO))
barplot(corr_coff, main = "Correlations between Player Stats and EFF", names.arg = c("PTS", "REB", "STL", "AST", "BLK", "Missed_FT", "Missed_FG", "TO"), ylim=c(-1,1), if(corr_coff>0) {col="red"} else {col="blue"})
corr_coff <- c(cor(DataBase$EFF, DataBase$PTS), cor(DataBase$EFF, DataBase$REB), cor(DataBase$EFF, DataBase$AST), cor(DataBase$EFF, DataBase$STL), cor(DataBase$EFF, DataBase$BLK), cor(DataBase$EFF, -DataBase$Missed_FG), cor(DataBase$EFF, -DataBase$Missed_FT), cor(DataBase$EFF, -DataBase$TO))
barplot(corr_coff, main = "Correlations between Player Stats and EFF", names.arg = c("PTS", "REB", "STL", "AST", "BLK", "Missed_FT", "Missed_FG", "TO"), ylim=c(-1,1), if(corr_coff < 0) {col="red"} else {col="blue"})
corr_coff <- c(cor(DataBase$EFF, DataBase$PTS), cor(DataBase$EFF, DataBase$REB), cor(DataBase$EFF, DataBase$AST), cor(DataBase$EFF, DataBase$STL), cor(DataBase$EFF, DataBase$BLK), cor(DataBase$EFF, -DataBase$Missed_FG), cor(DataBase$EFF, -DataBase$Missed_FT), cor(DataBase$EFF, -DataBase$TO))
barplot(corr_coff, main = "Correlations between Player Stats and EFF", names.arg = c("PTS", "REB", "STL", "AST", "BLK", "Missed_FT", "Missed_FG", "TO"), ylim=c(-1,1))
abline( h = 0)
corr_coff <- c(cor(DataBase$EFF, DataBase$PTS), cor(DataBase$EFF, DataBase$REB), cor(DataBase$EFF, DataBase$AST), cor(DataBase$EFF, DataBase$STL), cor(DataBase$EFF, DataBase$BLK), cor(DataBase$EFF, -DataBase$Missed_FG), cor(DataBase$EFF, -DataBase$Missed_FT), cor(DataBase$EFF, -DataBase$TO))
barplot(corr_coff, main = "Correlations between Player Stats and EFF", names.arg = c("PTS", "REB", "STL", "AST", "BLK", "Missed_FT", "Missed_FG", "TO"), ylim=c(-1,1), cols = c( "gray", "red") )
abline( h = 0)
corr_coff <- c(cor(DataBase$EFF, DataBase$PTS), cor(DataBase$EFF, DataBase$REB), cor(DataBase$EFF, DataBase$AST), cor(DataBase$EFF, DataBase$STL), cor(DataBase$EFF, DataBase$BLK), cor(DataBase$EFF, -DataBase$Missed_FG), cor(DataBase$EFF, -DataBase$Missed_FT), cor(DataBase$EFF, -DataBase$TO))
barplot(corr_coff, main = "Correlations between Player Stats and EFF", names.arg = c("PTS", "REB", "STL", "AST", "BLK", "Missed_FT", "Missed_FG", "TO"), ylim=c(-1,1), col = c( "gray", "red") )
abline( h = 0)
corr_coff <- c(cor(DataBase$EFF, DataBase$PTS), cor(DataBase$EFF, DataBase$REB), cor(DataBase$EFF, DataBase$AST), cor(DataBase$EFF, DataBase$STL), cor(DataBase$EFF, DataBase$BLK), cor(DataBase$EFF, -DataBase$Missed_FG), cor(DataBase$EFF, -DataBase$Missed_FT), cor(DataBase$EFF, -DataBase$TO))
barplot(corr_coff, main = "Correlations between Player Stats and EFF", names.arg = c("PTS", "REB", "STL", "AST", "BLK", "Missed_FT", "Missed_FG", "TO"), ylim=c(-1,1), col = c( "magenta"") )
abline( h = 0)
corr_coff <- c(cor(DataBase$EFF, DataBase$PTS), cor(DataBase$EFF, DataBase$REB), cor(DataBase$EFF, DataBase$AST), cor(DataBase$EFF, DataBase$STL), cor(DataBase$EFF, DataBase$BLK), cor(DataBase$EFF, -DataBase$Missed_FG), cor(DataBase$EFF, -DataBase$Missed_FT), cor(DataBase$EFF, -DataBase$TO))
barplot(corr_coff, main = "Correlations between Player Stats and EFF", names.arg = c("PTS", "REB", "STL", "AST", "BLK", "Missed_FT", "Missed_FG", "TO"), ylim=c(-1,1), col = c( "magenta") )
abline( h = 0)
corr_coff <- c(cor(DataBase$EFF, DataBase$PTS), cor(DataBase$EFF, DataBase$REB), cor(DataBase$EFF, DataBase$AST), cor(DataBase$EFF, DataBase$STL), cor(DataBase$EFF, DataBase$BLK), cor(DataBase$EFF, -DataBase$Missed_FG), cor(DataBase$EFF, -DataBase$Missed_FT), cor(DataBase$EFF, -DataBase$TO))
barplot(corr_coff, main = "Correlations between Player Stats and EFF", names.arg = c("PTS", "REB", "STL", "AST", "BLK", "Missed_FT", "Missed_FG", "TO"), ylim=c(-1,1), col = c( "teal") )
corr_coff <- c(cor(DataBase$EFF, DataBase$PTS), cor(DataBase$EFF, DataBase$REB), cor(DataBase$EFF, DataBase$AST), cor(DataBase$EFF, DataBase$STL), cor(DataBase$EFF, DataBase$BLK), cor(DataBase$EFF, -DataBase$Missed_FG), cor(DataBase$EFF, -DataBase$Missed_FT), cor(DataBase$EFF, -DataBase$TO))
barplot(corr_coff, main = "Correlations between Player Stats and EFF", names.arg = c("PTS", "REB", "STL", "AST", "BLK", "Missed_FT", "Missed_FG", "TO"), ylim=c(-1,1), col = c( "beige") )
abline( h = 0)
corr_coff <- c(cor(DataBase$EFF, DataBase$PTS), cor(DataBase$EFF, DataBase$REB), cor(DataBase$EFF, DataBase$AST), cor(DataBase$EFF, DataBase$STL), cor(DataBase$EFF, DataBase$BLK), cor(DataBase$EFF, -DataBase$Missed_FG), cor(DataBase$EFF, -DataBase$Missed_FT), cor(DataBase$EFF, -DataBase$TO))
barplot(corr_coff, main = "Correlations between Player Stats and EFF", names.arg = c("PTS", "REB", "STL", "AST", "BLK", "Missed_FT", "Missed_FG", "TO"), ylim=c(-1,1), if (corr_coff < 0) {col = blue} )
#Top 10 EFF
Top = tail(DataBase$EFF[order(DataBase$EFF)], 10)
top_10 <- data.frame( c(DataBase$Player[DataBase$EFF == Top], DataBase$Team[DataBase$EFF == Top], DataBase$Salary[DataBase$EFF == Top], Top))
#Top 10 EFF
Top = tail(DataBase$EFF[order(DataBase$EFF)], 10)
top_10 <- data.frame( c(DataBase$Player[DataBase$EFF == Top], DataBase$Team[DataBase$EFF == Top], DataBase$Salary[DataBase$EFF == Top], Top))
#Efficiency and Salary
plot(DataBase$EFF, DataBase$Salary, main = "Plot of Salary and Experience", xlab = "Years of Experience", ylab = "Salary")
lines(lowess(DataBase$EFF, DataBase$Salary, f = 2/3, iter = 3))
#Efficiency and Salary
plot(DataBase$EFF, DataBase$Salary, main = "Plot of Salary and Experience", xlab = "Years of Experience", ylab = "Salary")
lines(lowess(DataBase$EFF, DataBase$Salary, f = 2/3, iter = 3))
?plot
#Efficiency and Salary
plot(DataBase$EFF, DataBase$Salary, main = "Plot of Efficiency and Salary", xlab = "Efficiency", ylab = "Salary")
lines(lowess(DataBase$EFF, DataBase$Salary, f = 2/3, iter = 3))
#Computed Correlations
corr_coff <- c(cor(DataBase$EFF, DataBase$PTS), cor(DataBase$EFF, DataBase$REB), cor(DataBase$EFF, DataBase$AST), cor(DataBase$EFF, DataBase$STL), cor(DataBase$EFF, DataBase$BLK), cor(DataBase$EFF, -DataBase$Missed_FG), cor(DataBase$EFF, -DataBase$Missed_FT), cor(DataBase$EFF, -DataBase$TO))
barplot(corr_coff, main = "Correlations between Player Stats and EFF", names.arg = c("PTS", "REB", "STL", "AST", "BLK", "Missed_FT", "Missed_FG", "TO"), ylim=c(-1,1), col = c("gray", "gray", "gray", "gray", "gray", "red", "red", "red") )
abline( h = 0)
#Efficiency and Salary
plot(DataBase$EFF, DataBase$Salary, main = "Plot of Efficiency and Salary", xlab = "Efficiency", ylab = "Salary")
lines(lowess(DataBase$EFF, DataBase$Salary, f = 2/3, iter = 3))
corr = cor(DataBase$EFF, DataBase$Salary)
rm(Top)
#Top 10 EFF
library(dplyr)
install.packages(""dplyr")
install.packages(dplyr)
install.packages("dplyr")
install.packages("dplyr")
knitr::opts_chunk$set(echo = TRUE)
#Top 10 EFF
library(dplyr)
Top = arrange(DataBase, desc(EFF))
Top = slide(Top, 1:10)
#Top 10 EFF
library(dplyr)
Top = arrange(DataBase, desc(EFF))
Top = slice(Top, 1:10)
Top = select(Top, Player, Team, Salary, EFF)
players2 <- data.frame(subset(DataBase, DataBase$MPG >= 20))
players2 <- data.frame(subset(DataBase, DataBase$MPG >= 20))
plot(players2$EFF, players2$Salary, main = "Plot of Efficiency and Salary", xlab = "Efficiency", ylab = "Salary")
lines(lowess(player2$EFF, player2$Salary, f = 2/3, iter = 3))
players2 <- data.frame(subset(DataBase, DataBase$MPG >= 20))
plot(players2$EFF, players2$Salary, main = "Plot of Efficiency and Salary", xlab = "Efficiency", ylab = "Salary")
lines(lowess(players2$EFF, players2$Salary, f = 2/3, iter = 3))
corr = cor(players2$EFF, players2$Salary)
players2 <- data.frame(subset(DataBase, DataBase$MPG >= 20))
plot(players2$EFF, players2$Salary, main = "Plot of Efficiency and Salary", xlab = "Efficiency", ylab = "Salary")
lines(lowess(players2$EFF, players2$Salary, f = 2/3, iter = 3))
corr = cor(players2$EFF, players2$Salary)
corr
#Efficiency and Salary
plot(DataBase$EFF, DataBase$Salary, main = "Plot of Efficiency and Salary", xlab = "Efficiency", ylab = "Salary")
lines(lowess(DataBase$EFF, DataBase$Salary, f = 2/3, iter = 3))
corr = cor(DataBase$EFF, DataBase$Salary)
corr
#Since corr is > 0, there's a positive correlation between Efficiency and Salary. The lowess line is less steep in the beginning, indicating that at lower levels of efficiency, slight increases in efficicenty corresponds with a low change in salary. However, above an EFF score of 15, the change looks to be proportional as shown by the steep lowess line. This could be because this me
DataBase <- data.frame(read.csv(csv, header = TRUE, colClasses=c("Player"="character", "Team" = "character", "Experience" = "character", "Position" = "factor", "Salary" = 'double')))
str(DataBase)
getwd()
setwd(/Users/KuangXu-Bin/Desktop/Berkeley/Fall_2017/stat133/stat133-hws-fall17/hw02)
setwd(Users/KuangXu-Bin/Desktop/Berkeley/Fall_2017/stat133/stat133-hws-fall17/hw02)
setwd("/Users/KuangXu-Bin/Desktop/Berkeley/Fall_2017/stat133/stat133-hws-fall17/hw02"")
DataBase <- data.frame(read.csv(csv, header = TRUE, colClasses=c("Player"="character", "Team" = "character", "Experience" = "character", "Position" = "factor", "Salary" = 'double')))
setwd("/Users/KuangXu-Bin/Desktop/Berkeley/Fall_2017/stat133/stat133-hws-fall17/hw02")
DataBase <- data.frame(read.csv(csv, header = TRUE, colClasses=c("Player"="character", "Team" = "character", "Experience" = "character", "Position" = "factor", "Salary" = 'double')))
str(DataBase)
setwd("/Users/KuangXu-Bin/Desktop/Berkeley/Fall_2017/stat133/stat133-hws-fall17")
DataBase <- data.frame(read.csv(csv, header = TRUE, colClasses=c("Player"="character", "Team" = "character", "Experience" = "character", "Position" = "factor", "Salary" = 'double')))
str(DataBase)
github <- "https://github.com/ucb-stat133/stat133-fall-2017/raw/master/"
file <- "data/nba2017-player-statistics.csv"
csv <- paste0(github, file)
download.file(url = csv, destfile = 'nba2017-player-statistics.csv')
getwd()
setwd("/Users/KuangXu-Bin/Desktop/Berkeley/Fall_2017/stat133/stat133-hws-fall17/hw02/data")
github <- "https://github.com/ucb-stat133/stat133-fall-2017/raw/master/" file <- "data/nba2017-player-statistics.csv"
csv <- paste0(github, file)
download.file(url = csv, destfile = 'nba2017-player-statistics.csv')
setwd("/Users/KuangXu-Bin/Desktop/Berkeley/Fall_2017/stat133/stat133-hws-fall17/hw02/")
github <- "https://github.com/ucb-stat133/stat133-fall-2017/raw/master/"
file <- "data/nba2017-player-statistics.csv"
csv <- paste0(github, file)
download.file(url = csv, destfile = 'nba2017-player-statistics.csv')
getwd()
setwd("/Users/KuangXu-Bin/Desktop/Berkeley/Fall_2017/stat133/stat133-hws-fall17/hw02")
getwd()
github <- "https://github.com/ucb-stat133/stat133-fall-2017/raw/master/" file <- "data/nba2017-player-statistics.csv"
csv <- paste0(github, file)
download.file(url = csv, destfile = 'nba2017-player-statistics.csv')
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
setwd("/Users/KuangXu-Bin/Desktop/Berkeley/Fall_2017/stat133/stat133-hws-fall17/hw02")
knitr::opts_chunk$set(echo = TRUE)
setwd("/Users/KuangXu-Bin/Desktop/Berkeley/Fall_2017/stat133/stat133-hws-fall17/hw02")
DataBase <- data.frame(read.csv(csv, header = TRUE, colClasses=c("Player"="character", "Team" = "character", "Experience" = "character", "Position" = "factor", "Salary" = 'double')))
str(DataBase)
library(readr)
DataReadr <- read_csv(csv, col_types = cols(.default = col_integer(),Player = col_character(), Team = col_character(), Position = col_factor(c('C','PF','PG','SF','SG')), Experience = col_character(), Salary = col_double()))
str(DataReadr)
DataBase$Experience <- replace(as.character(DataBase$Experience), DataBase$Experience == "R", 0)
DataBase$Experience = as.integer(DataBase$Experience)
DataBase$Missed_FG = DataBase$FGA - DataBase$FGM
DataBase$Missed_FT = DataBase$FTA - DataBase$FTM
DataBase$PTS = 2 * DataBase$Points2 + 3 * DataBase$Points3 + DataBase$FTM
DataBase$REB = DataBase$OREB + DataBase$DREB
DataBase$MPG = DataBase$MIN/DataBase$GP
DataBase$EFF = (DataBase$PTS + DataBase$REB + DataBase$AST + DataBase$STL + DataBase$BLK - DataBase$Missed_FG - DataBase$Missed_FT - DataBase$TO) / DataBase$GP
summary(DataBase$EFF)
hist(DataBase$EFF, xlab = "EFF", main = "Histogram of Efficient(EFF)", col = "gray")
#Top 10 EFF
library(dplyr)
Top = arrange(DataBase, desc(EFF))
Top = slice(Top, 1:10)
Top = select(Top, Player, Team, Salary, EFF)
#Players with Negative EFF
DataBase$Player[DataBase$EFF < 0]
#Computed Correlations
corr_coff <- c(cor(DataBase$EFF, DataBase$PTS), cor(DataBase$EFF, DataBase$REB), cor(DataBase$EFF, DataBase$AST), cor(DataBase$EFF, DataBase$STL), cor(DataBase$EFF, DataBase$BLK), cor(DataBase$EFF, -DataBase$Missed_FG), cor(DataBase$EFF, -DataBase$Missed_FT), cor(DataBase$EFF, -DataBase$TO))
barplot(corr_coff, main = "Correlations between Player Stats and EFF", names.arg = c("PTS", "REB", "STL", "AST", "BLK", "Missed_FT", "Missed_FG", "TO"), ylim=c(-1,1), col = c("gray", "gray", "gray", "gray", "gray", "red", "red", "red") )
abline( h = 0)
#Efficiency and Salary
plot(DataBase$EFF, DataBase$Salary, main = "Plot of Efficiency and Salary", xlab = "Efficiency", ylab = "Salary")
lines(lowess(DataBase$EFF, DataBase$Salary, f = 2/3, iter = 3))
corr = cor(DataBase$EFF, DataBase$Salary)
corr
#Since corr is > 0, there's a positive correlation between Efficiency and Salary. The lowess line is less steep in the beginning, indicating that at lower levels of efficiency, slight increases in efficicenty corresponds with a low change in salary. However, above an EFF score of 15, the change looks to be proportional as shown by the steep lowess line. This could be because this me
players2 <- data.frame(subset(DataBase, DataBase$MPG >= 20))
plot(players2$EFF, players2$Salary, main = "Plot of Efficiency and Salary", xlab = "Efficiency", ylab = "Salary")
lines(lowess(players2$EFF, players2$Salary, f = 2/3, iter = 3))
corr = cor(players2$EFF, players2$Salary)
corr
#The correlation is lower for more established players because there is a better track record for teams to decide on after rookies have been removed.
knitr::opts_chunk$set(echo = TRUE)
setwd("/Users/KuangXu-Bin/Desktop/Berkeley/Fall_2017/stat133/stat133-hws-fall17/hw02")
DataBase <- data.frame(read.csv("data/nba2017-player-statistics.csv", header = TRUE, colClasses=c("Player"="character", "Team" = "character", "Experience" = "character", "Position" = "factor", "Salary" = 'double')))
str(DataBase)
library(readr)
DataReadr <- read_csv("data/nba2017-player-statistics.csv", col_types = cols(.default = col_integer(),Player = col_character(), Team = col_character(), Position = col_factor(c('C','PF','PG','SF','SG')), Experience = col_character(), Salary = col_double()))
str(DataReadr)
DataBase$Experience <- replace(as.character(DataBase$Experience), DataBase$Experience == "R", 0)
DataBase$Experience = as.integer(DataBase$Experience)
DataBase$Missed_FG = DataBase$FGA - DataBase$FGM
DataBase$Missed_FT = DataBase$FTA - DataBase$FTM
DataBase$PTS = 2 * DataBase$Points2 + 3 * DataBase$Points3 + DataBase$FTM
DataBase$REB = DataBase$OREB + DataBase$DREB
DataBase$MPG = DataBase$MIN/DataBase$GP
DataBase$EFF = (DataBase$PTS + DataBase$REB + DataBase$AST + DataBase$STL + DataBase$BLK - DataBase$Missed_FG - DataBase$Missed_FT - DataBase$TO) / DataBase$GP
summary(DataBase$EFF)
hist(DataBase$EFF, xlab = "EFF", main = "Histogram of Efficient(EFF)", col = "gray")
DataBase$EFF = (DataBase$PTS + DataBase$REB + DataBase$AST + DataBase$STL + DataBase$BLK - DataBase$Missed_FG - DataBase$Missed_FT - DataBase$TO) / DataBase$GP
summary(DataBase$EFF)
DataBase$EFF = (DataBase$PTS + DataBase$REB + DataBase$AST + DataBase$STL + DataBase$BLK - DataBase$Missed_FG - DataBase$Missed_FT - DataBase$TO) / DataBase$GP
summary(DataBase$EFF)
hist(DataBase$EFF, xlab = "EFF", main = "Histogram of Efficient(EFF)", col = "gray")
hist(DataBase$EFF, xlab = "EFF", main = "Histogram of Efficient(EFF)", col = "gray")
hist(DataBase$EFF, xlab = "EFF", main = "Histogram of Efficient(EFF)")
hist(DataBase$EFF, xlab = "EFF", main = "Histogram of Efficient(EFF)")
DataBase$EFF = (DataBase$PTS + DataBase$REB + DataBase$AST + DataBase$STL + DataBase$BLK - DataBase$Missed_FG - DataBase$Missed_FT - DataBase$TO) / DataBase$GP
summary(DataBase$EFF)
knitr::opts_chunk$set(echo = TRUE)
setwd("/Users/KuangXu-Bin/Desktop/Berkeley/Fall_2017/stat133/stat133-hws-fall17/hw02")
DataBase <- data.frame(read.csv(csv, header = TRUE, colClasses=c("Player"="character", "Team" = "character", "Experience" = "character", "Position" = "factor", "Salary" = 'double')))
str(DataBase)
library(readr)
DataReadr <- read_csv(csv, col_types = cols(.default = col_integer(),Player = col_character(), Team = col_character(), Position = col_factor(c('C','PF','PG','SF','SG')), Experience = col_character(), Salary = col_double()))
str(DataReadr)
DataBase$Experience <- replace(as.character(DataBase$Experience), DataBase$Experience == "R", 0)
DataBase$Experience = as.integer(DataBase$Experience)
DataBase$Missed_FG = DataBase$FGA - DataBase$FGM
DataBase$Missed_FT = DataBase$FTA - DataBase$FTM
DataBase$PTS = 2 * DataBase$Points2 + 3 * DataBase$Points3 + DataBase$FTM
DataBase$REB = DataBase$OREB + DataBase$DREB
DataBase$MPG = DataBase$MIN/DataBase$GP
DataBase$EFF = (DataBase$PTS + DataBase$REB + DataBase$AST + DataBase$STL + DataBase$BLK - DataBase$Missed_FG - DataBase$Missed_FT - DataBase$TO) / DataBase$GP
summary(DataBase$EFF)
hist(DataBase$EFF, xlab = "EFF", main = "Histogram of Efficient(EFF)", col = "gray")
#Top 10 EFF
library(dplyr)
Top = arrange(DataBase, desc(EFF))
Top = slice(Top, 1:10)
Top = select(Top, Player, Team, Salary, EFF)
#Players with Negative EFF
DataBase$Player[DataBase$EFF < 0]
#Computed Correlations
corr_coff <- c(cor(DataBase$EFF, DataBase$PTS), cor(DataBase$EFF, DataBase$REB), cor(DataBase$EFF, DataBase$AST), cor(DataBase$EFF, DataBase$STL), cor(DataBase$EFF, DataBase$BLK), cor(DataBase$EFF, -DataBase$Missed_FG), cor(DataBase$EFF, -DataBase$Missed_FT), cor(DataBase$EFF, -DataBase$TO))
barplot(corr_coff, main = "Correlations between Player Stats and EFF", names.arg = c("PTS", "REB", "STL", "AST", "BLK", "Missed_FT", "Missed_FG", "TO"), ylim=c(-1,1), col = c("gray", "gray", "gray", "gray", "gray", "red", "red", "red") )
abline( h = 0)
#Efficiency and Salary
plot(DataBase$EFF, DataBase$Salary, main = "Plot of Efficiency and Salary", xlab = "Efficiency", ylab = "Salary")
lines(lowess(DataBase$EFF, DataBase$Salary, f = 2/3, iter = 3))
corr = cor(DataBase$EFF, DataBase$Salary)
corr
#Since corr is > 0, there's a positive correlation between Efficiency and Salary. The lowess line is less steep in the beginning, indicating that at lower levels of efficiency, slight increases in efficicenty corresponds with a low change in salary. However, above an EFF score of 15, the change looks to be proportional as shown by the steep lowess line. This could be because this me
players2 <- data.frame(subset(DataBase, DataBase$MPG >= 20))
plot(players2$EFF, players2$Salary, main = "Plot of Efficiency and Salary", xlab = "Efficiency", ylab = "Salary")
lines(lowess(players2$EFF, players2$Salary, f = 2/3, iter = 3))
corr = cor(players2$EFF, players2$Salary)
corr
#The correlation is lower for more established players because there is a better track record for teams to decide on after rookies have been removed.
