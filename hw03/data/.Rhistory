setwd("../")
#====================================================
# Title: Make 2017 Teams Table
# Description: Creating a comprehensive CSV file for NBA teams
# Input: data files nba2017-roster.csv and nba2017-stats.csv
# Output: data file nba2017-teams.csv, star plot - teams_star_plot.pdf, scatter plot - experience_salary.pdf
# Author: Xu-Bin Kuang
#====================================================
#Loading the packages
library(dplyr)
library(ggplot2)
library(readr)
#Setting working directory
setwd("/Users/KuangXu-Bin/Desktop/Berkeley/Fall_2017/stat133/stat133-hws-fall17/hw03/data")
#Loading data
data_teams <- read.csv("nba2017-roster.csv")
data_stats <- read.csv("nba2017-stats.csv")
#Adding new variables to stats
data_stats <- data_stats %>% mutate(missed_fg = field_goals_atts - field_goals_made) %>%
mutate(missed_ft = points1_atts - points1_made) %>%
mutate(points = points3_made*3 + points2_made*2 + points1_made) %>%
mutate( rebounds = off_rebounds + def_rebounds) %>%
mutate( efficiency = (points + rebounds + assists + steals + blocks
- missed_fg - missed_ft - turnovers) / games_played)
#Sinking to new summary file
sink(file = '../output/efficiency-summary.txt')
summary(data_stats$efficiency)
sink()
#Merging the two tables
teams_stats <- merge(data_stats, data_teams)
#Data Aggregation
teams <- teams_stats %>%
select(team, experience, points3_made, points2_made, points1_made, points, off_rebounds,
salary, def_rebounds, assists, steals, blocks, turnovers, fouls, efficiency) %>%
group_by(team) %>%  summarise(experience = sum(experience), salary = sum(salary/1000000), points3 = sum(points3_made),
points2 = sum(points2_made), free_throws = sum(points1_made), points = sum(points),
off_rebounds = sum(off_rebounds), def_rebounds = sum(def_rebounds), assists = sum(assists),
steals = sum(steals), blocks = sum(blocks), turnovers = sum(turnovers), fouls = sum(fouls), efficiency = sum(efficiency))
#Outputs
sink(file = '../output/text-summary.txt' )
summary(teams)
sink()
write.csv(teams, file = '../data/nba2017-teams.csv')
#Plots
pdf('../images/teams_star_plot.pdf')
startplot <- stars(teams[ ,-1], labels = as.character(teams$team))
dev.off()
pdf('../images/experience_salary.pdf')
ggplot(teams, aes(experience,salary)) + geom_text(aes(label= team)) + geom_point()
dev.off()
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
ggplot(teams, aes(x = Team, y= salary) +
geom_bar() + coord_flip()
ggplot(teams, aes(x = Team, y= salary)) + geom_bar() + coord_flip()
ggplot(teams, aes(x = team, y= salary)) + geom_bar() + coord_flip()
?geom_bar
ggplot(teams, aes(x = team, y= salary)) + geom_bar(stat = 'identity') + coord_flip()
ggplot(teams, aes(x = team, y= salary)) + geom_bar(stat = 'identity') + coord_flip() + ggtitle("NBA Teams ranked by Total Salary") + xlab("Team") + ylab("Total Points")
?within
teams <- within(teams,
salary <- factor(salary,
levels=names(sort(table(salary),
decreasing=TRUE))))
ggplot(teams, aes(x = team, y= salary)) + geom_bar(stat = 'identity') + coord_flip() + ggtitle("NBA Teams ranked by Total Salary") + xlab("Team") + ylab("Total Points")
teams <- within(teams,
salary <- factor(salry,
levels=names(sort(table(salary),
decreasing=TRUE))))
teams <- within(teams,
salary <- factor(salry,
levels=names(sort(table(salary),
decreasing=TRUE))))
teams <- within(teams, salary <- factor(salary,levels=names(sort(table(salary), decreasing=TRUE))))
ggplot(teams, aes(x = team, y= salary)) + geom_bar(stat = 'identity') + coord_flip() + ggtitle("NBA Teams ranked by Total Salary") + xlab("Team") + ylab("Total Points")
ggplot(teams, aes(x = team, y= salary)) + geom_bar(stat = 'identity') + coord_flip() + ggtitle("NBA Teams ranked by Total Salary") + xlab("Team") + ylab("Total Points")
ggplot(teams, aes(x = reorder(team), y= salary)) + geom_bar(stat = 'identity') + coord_flip() + ggtitle("NBA Teams ranked by Total Salary") + xlab("Team") + ylab("Total Points")
ggplot(teams, aes(x = reorder(team, salary), y= salary)) + geom_bar(stat = 'identity') + coord_flip() + ggtitle("NBA Teams ranked by Total Salary") + xlab("Team") + ylab("Total Points")
ggplot(teams, aes(x = reorder(team, salary), y=salary)) +
geom_bar(stat='identity') +
coord_flip() +
labs(x = "Team", y = "Salary (in millions)",
title = "NBA Teams Ranked by Total Salary") +
geom_hline(yintercept = mean(teams$salary), color='red')
# packages
library(readr)    # importing data
library(dplyr)    # data wrangling
library(ggplot2)  # graphics
# import data
teams <- read_csv("../data/nba2017-teams.csv")
# packages
library(readr)    # importing data
library(dplyr)    # data wrangling
library(ggplot2)  # graphics
# import data
teams <- read_csv("../data/nba2017-teams.csv")
ggplot(teams, aes(x = reorder(team, salary), y=salary)) +
geom_bar(stat='identity') +
coord_flip() +
labs(x = "Team", y = "Salary (in millions)",
title = "NBA Teams Ranked by Total Salary") +
geom_hline(yintercept = mean(teams$salary), color='red')
ggplot(teams, aes(x = reorder(team, points), y=points)) +
geom_bar(stat='identity') +
coord_flip() +
labs(x = "Team", y = "Total Points",
title = "NBA Teams Ranked by Total Points") +
geom_hline(yintercept = mean(teams$points), color='red')
ggplot(teams, aes(x = reorder(team, efficiency), y=efficiency)) +
geom_bar(stat='identity') +
coord_flip() +
labs(x = "Team", y = "Total Efficiency",
title = "NBA Teams Ranked by Total Efficiency") +
geom_hline(yintercept = mean(teams$efficiency), color='red')
# data frame with eigenvalues
pca_vars <- select(teams, points3, points2, free_throws, off_rebounds, def_rebounds, assists, steals,
blocks, turnovers, fouls)
pca <- prcomp(pca_vars, scale. = TRUE)
eigen <- data.frame(eigenvalue = round(pca$sdev^2,4), prop = round(pca$sdev^2 / sum(pca$sdev^2), 4))
eigen$cumprop <- cumsum(eigen$prop)
eigen
# create another df
pca_df = as.data.frame(pca$x)
rownames(pca_df) <- teams$team
# head(pca_df)
# plot of observations
ggplot(data = pca_df, aes(x = PC1, y = PC2, label = rownames(pca_df))) +
geom_hline(yintercept = 0, colour = "gray65") +
geom_vline(xintercept = 0, colour = "gray65") +
geom_text(colour = "black", alpha = 0.8, size = 4) +
ggtitle("PCA Plot (PCA1 and PCA2)")
#plot(pca$PC1, pca$PC2)
transformed_PC1 <- 100 * ((pca_df$PC1 - min(pca_df$PC1)) / (max(pca_df$PC1) - min(pca_df$PC1)))
transformed_PC1
ggplot(teams, aes(x = reorder(team, transformed_PC1), y=transformed_PC1)) +
geom_bar(stat='identity') +
coord_flip() +
labs(x = "Team", y = "First PC (scaled from 0 to 100)",
title = "NBA Teams Ranked by Scaled PC1")
